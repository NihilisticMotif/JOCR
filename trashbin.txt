<td><div className='C01id_EditRowButton'><button onClick={f_Cancel}>Ok</button></div></td>
    <td><div className='C01id_EditRowButton'><button onClick={f_Cancel}>Cancel</button></div></td>
 
"3"
 
    <td></td>
    <td></td>
    <td>Do you sure you want to delete this row?</td>
 
    <td></td>
 
    <td></td>
 
<h1>
 
<tr className='C01id_HeightLightRow'>
    <td></td>
    <td><div className='C01id_EditRowButton'><input></input><button>Ok</button></div></td>
    <td><div className='C01id_EditRowButton'><input></input><button>Ok</button></div></td>
    <td><div className='C01id_EditRowButton'><input></input><button>Ok</button></div></td>
    <td><div className='C01id_EditRowButton'><button onClick={f_Cancel}>Cancel</button></div></td>
</tr>
 
Edited
 
        //setSS_Display(1)
 
        setSS_Display(0)
 
        //alert('Working')
 
            alert(THISROW.Key)
 
,SS_IndexColumns,SS_PrivateReset
 
,SS_IndexColumns,SS_PrivateReset
 
    const [SS_PrivateReset,setSS_PrivateReset]=useState<boolean>(true)
    // SS_PrivateColumns only updated onces in useEffect.
    // It determine the order of SS_Row
 
        setSS_Display(1)
 
            break;
 
 table 
 
    border-collapse: collapse;
 

.C01id_HeightLightRow tr{
    display:flex;
}
 
    background-color: rgb(100, 100, 200);
 
:not(.C01id_HeightLightRow)
 

#C01id_Table tr:nth-child(even) {
    background-color: #f2f2f2;
}
 
className='C01id_HeightLightRow'
 
    let let_Display:0|1|2|3=0
    if(typeof THISROW.Display!==undefined){
        let_Display!=THISROW.Display
    }
 
0
    
 
<div className='C01id_EditRowButton'></div>
 
<button onClick={f_OpenRename}>Edit</button><button onClick={f_OpenDelete}>X</button>
 
: {INDEX}
 
Editor
 
: {INDEX}
 
<button onClick={f_OpenRename}>Ok</button>
 
<button onClick={f_OpenDelete}>Cancel</button>
 
: {INDEX}
 
</>
 
    const C01id_Rename:string='C01id_Rename'+THISROW.Key.toString()
 
//****************************************************************************
// FUNCTION_00: Change Mode of C_DefineColumn Components for Rename and Delete 
//****************************************************************************

    function f_Display(D:0|1|2|3){
        //let ss_Row:TS_Row[]=[...SS_Row]
        //let let_UpdateColumns:TS_Row[]=U_UpdateDisplay(THISROW,ss_Row,D)
        //setSS_Row(let_UpdateColumns)   
    }

    function f_Cancel():void{
        f_Display(0)
    }

 
/*
 
    let let_DefaultDisplay:0|1|2
    if(THISROW.Display===undefined || THISROW.Display===3){
        let_DefaultDisplay=0
    }else{
        let_DefaultDisplay=THISROW.Display
    }

 
</>
 
</>
 
    SS_IndexColumns:number[],
    setSS_IndexColumns:(S:number[])=>void,
 
    // https://stackoverflow.com/questions/56649094/how-to-reload-a-component-part-of-page-in-reactjs
    SS_IndexColumns,    // Only used in f_Delete
    setSS_IndexColumns,
 
<div 
    className={'C01id'} 
    key={THISROW.Key} 
>
 
</div>
 
import C_DefineColumnButton from './Coms/useless01'
import C_CreateColumn from './Coms/useless00';
 
    let let_NewKey:number=Math.random()
    while(ROWS.map(ROW=>ROW.Key).includes(let_NewKey)===true){
        let_NewKey=Math.random()
    }
 
:number
 
let let_Amount:number = parseFloat((document.getElementById('C01id_InputAmount') as HTMLInputElement).value);
 
et_Price
 

        // Check if the value is a valid number
 
.toString()
 
.toString()
 
alert('Hello The World')
 
        if()
 
)
 
    SS_IndexColumns   :number[],
    setSS_IndexColumns:(S:number[])=>void,
 
    SS_IndexColumns,    // Update the index of Column inside C01_Table
    setSS_IndexColumns, // -
 
<div id='C01id_Div1'>
<table>
<h1 id='C01id_Div1Header'>Create New Row</h1>
<hr/>
<div >
<tr><td><h1>Name:   </h1><input></input></td></tr>
<tr><td><h1>Price:  </h1><input></input></td></tr>
<tr><td><h1>Amount: </h1><input></input></td></tr>
</div>
<hr />
<tr><td>
<div id='C01id_Div1Button'>
<button>Ok</button>
<button>Cancel</button>
</div>
</td></tr>
</table>
</div>
 
<div className='C01id_SortButton'><button onClick={()=>alert('KK')}>Sort</button></div>
 
//****************************************************************************
// FUNCTION_01: Sort Index
//****************************************************************************
    function f_SortIndex(COLUMN:string):void{
        // Get the Alphabet Name Order of SS_Row
        let ss_Row:TS_Row[] = [...SS_Row]
        ss_Row.sort(f_Sort(COLUMN));
        if(SS_IsD===true){
            ss_Row.reverse();
            setSS_IsD(false)
        }
        else{
            setSS_IsD(true)
        }
        // https://www.w3schools.com/jsref/jsref_sort.asp
        // https://stackoverflow.com/questions/11182924/how-to-check-if-javascript-object-is-json
        
        // Update SS_IndexColumns
        setSS_Row(ss_Row)
    }
 
SS_Column
 
import U_DefineTableHeader from './Coms/U_DefineTableHeader'
 
()=>f_DSort()
 
    Column:string,
 
    Column,
 
Name
 
IsD:boolean
 
    SS_IndexColumns,    // Update the index of Column inside C01_Table
    setSS_IndexColumns, // -
 
    SS_IndexColumns   :number[],
    setSS_IndexColumns:(S:number[])=>void,
 
 , useEffect
 
onClick={f_CreateColumn}
 
{/*
//****************************************************************************
// Edited Data
//****************************************************************************
<tr>
    <td>Original: 2</td>
    <td>Coffee</td>
    <td>100</td>
    <td>Delicious</td>
    <td></td>
</tr>
<tr>
    <td>Edited: 2</td>
    <td>Cake</td>
    <td>100</td>
    <td>Delicious</td>
    <td></td>
</tr>
<tr>
    <td>Editor</td>
    <td><button>Edit</button><button>Reset</button></td>
    <td><input></input><button>Ok</button><button>Cancel</button></td>
    <td><input></input><button>Ok</button><button>Cancel</button></td>
    <td><button>Ok</button><button>Cancel</button></td>
</tr>
*/}

{/*
//****************************************************************************
// The Mind Electric
//****************************************************************************
<tr>
    <th>Row Index</th>
    {JSX_TH_Rows}
    <th>Create new column as</th>
</tr>
<tr>
    <td></td>
    {JSX_BUTTON_Rows}
    <C_CreateColumn
// When create new columns
// SS_Column has to be updated
// and we have to calculate the order of new column.
        SS_Row={SS_Row}
        setSS_Row={setSS_Row}
        SS_IndexColumns={SS_IndexColumns}
        setSS_IndexColumns={setSS_IndexColumns}
    />
</tr>
    */}
 

.C01id_SortButtonLong button{
    margin-right: 5px;
    font-size: 16px;
    width: 100%;
    height: 30px
}
 
.C01id_EditRowButton{
    display:flex;
}
 
    <td><div className='C01id_SortButton'><button>Sort</button></div></td>
 
 Time, The Liminal Space Editor'},
 
interested in Homo Sapien, The Insect futuristic human, The Caregiver, Everywhere at the end of Space
 
re, The Khama Universal Police, The Better than Man after Man, The Bug who 
 
 God of Sci Fic, The Realistic Frizer, The Owner of Omnitrix, The Devil of the Futu
 
        //{Key: 3, Name: 'Que, The Human Editor, The Last Alien Bender, The
 
    margin-right: 5px;
 
    border: 1px solid rgb(205, 205, 205, 1);
 
    border-left: 5px solid rgb(205, 205, 205, 0);
    border-right: 5px solid rgb(205, 205, 205, 0);
 
.C01id_DivHeader{
    display: flex;
}

.C01id_Header {
     background-color: rgb(193, 193, 193);
     font-size: 16px;
     border: 1px solid rgb(205, 205, 205, 0);
     border-left: 5px solid rgb(205, 205, 205, 0);
     border-right: 5px solid rgb(205, 205, 205, 0);
}

 

#C01id_Div1Header{
    margin-left:0px;
}
 
    margin-top:0px;
 
    display: grid;
    margin-top:0px;
 

.C01id_Delete{
    font-size: 16px;
}
 
#C01_Button button {
    font-size: 17px;
}
 
    padding-left:5px;

 
    text-align: left;
 
    padding-left:20px;
 
margin-left:20px;
 
    overflow: hidden;
 
#C01id_Table th{
    height: 50px;
    overflow: hidden;
}
 
#C01id_Table table {
    /*
    https: //stackoverflow.com/questions/5671098/how-can-i-force-all-rows-in-a-table-to-have-the-same-height
    */
    border-collapse: collapse;
    width: 100%;
    height: 25px;
    table-layout: fixed;
    max-height: 20px;
}
 
#C01id_Div2{
    width: 500px;
    height:500px;
    overflow-y: scroll;
}
 

#C01id_Div2{
    width: 500px;
    height:500px;
    overflow-y: scroll;
}
 

td.C01id{
    height:0px;
}

 

.C01id_Header {
     background-color: rgb(193, 193, 193);
     font-size: 16px;
     border: 1px solid rgb(205, 205, 205, 0);
     border-left: 5px solid rgb(205, 205, 205, 0);
     border-right: 5px solid rgb(205, 205, 205, 0);
 }
 


.C01id_Header {
     background-color: rgb(193, 193, 193);
     font-size: 16px;
     border: 1px solid rgb(205, 205, 205, 0);
     border-left: 5px solid rgb(205, 205, 205, 0);
     border-right: 5px solid rgb(205, 205, 205, 0);
 }
 


.C01id_DivHeader{
    background-color: #023445;
    position:absolute;
}
 
.C01id {
    font-size: 16px;
    border: 1px solid rgb(205, 205, 205, 0);
    border-left: 5px solid rgb(205, 205, 205, 0);
    border-right: 5px solid rgb(205, 205, 205, 0);
    height: 30px;
    display: flex
}
 
#C01id_Div1 hr{
    color: red;
    background-color: red;
    height: 2px;
    border:none;
    width:100%;
}

#C01id_Div1Button{
    margin-top: 10px;
    margin-left: 0%;
    display:flex;
}

#C01id_Div1 h1{
    font-size: 18px;
}

 
#C01id_Div1 hr{
    color: red;
    background-color: red;
    height: 2px;
    border:none;
    width:100%;
}
 
#C01id_Div1{
    background-color: cadetblue;
    width:200px;
}

#C01id_Div1 td{
    display:grid;
}

#C01id_Div1 table{
    display:grid;
}

#C01id_Div1 td{
    margin-left:10px;
}

#C01id_Div1 button{
    border: 2px solid rgb(0, 0, 0);
    background-color: rgb(255, 255, 255);
    height: 30px;
}

 
#C01id_Div1{
    background-color: cadetblue;
    width:200px;
}
 
#C01id_Div{
    display:flex;
    background-color: #c794e3;
}
 
, The Last Alien Bender, The God of Sci Fic, The Realistic Frizer, The Owner of Omnitrix, The Devil of the Future, The Khama Universal Police, The Better than Man after Man, The Bug who interested in Homo Sapien, The Insect futuristic human, The Caregiver, Everywhere at the end of Space Time, The Liminal Space Editor
 
100000001000000010000000
 
000000010000000100000001000000010000000100000001
 
</div>
 
className='C01id_EditRowButton'
 
<h1>ww</h1>
 
className='C01id_EditRowButton'
 
    border: 2px solid rgb(0, 0, 0);
 
    border: 0px rgb(0,0,0,0);
 
    width: 100px;
    height:40px;
 
td
 
 className='C01id_EditRow'
 
button
 
     border: 2px solid rgb(0, 0, 0);
     background-color: rgb(255, 255, 255);
     height: 30px;
 
#C01id_Div1 button,
 
#C01id_Div1 button,
 
{
    
}

button.C01id {
 
button.C01id{
    border: 2px solid rgb(0, 0, 0);
    background-color: rgb(255, 255, 255);
    height: 30px;
}
 
tr,
 
    margin-left: 10px;
 
    flex:1;
 
className='C01id_hr'
 
id='C01id_Div1'
 
id='C01id_Div1Input'
 
id='C01id_Div1InputHeader'
 
className='C01id_hr'
 
    border: 3px;
 
#C01id_Div1Input{
    background-color: #c794e3;
}

#C01id_Div1InputHeader{
    background-color: aquamarine;
}

 
id='C01id_Div1InputHeader'
 
</div>
 
</div>
 
/*
 
*/
 
</td>
 
<button>Ok</button>
<button>Cancel</button>
 
<button>Ok</button>
<button>Cancel</button>
 
    display:flex;
 
<button>Ok</button>
<button>Cancel</button>
 
<h1>Create New Row</h1>
 
    display: block;
 
    overflow-x: scroll;
 
    overflow-x: scroll;
 
background-color: #023445;
 
    background-color: #023445;
 
</table>
 
</td>
 
</div>
 
Input
 
Input
 
</div>
 
</>
 
<>
 
</>
 
<h1>hh</h1>
 
    function f_Display(
            D:0|1|2|3,
            s_Row:TS_Row[],
            setS_Row:(S:TS_Row[])=>void):void{
        let let_UpdateColumns:TS_Row[]=U_UpdateDisplay(THISROW,s_Row,D)
        setS_Row(let_UpdateColumns)    
    }
 


 

        f_Display(D,ss_Row,setSS_Row)
        
 
,true
 
        IsNewSelect:boolean,
 
ColumnName
 
    setSS_IndexColumns = {setSS_IndexColumns}
 
<td><button className='C01id_Header' onClick={()=>f_DSort(true)}>Descending Sort Columns</button></td>
<td><button className='C01id_Header' onClick={()=>f_DSort(false)}>Ascending Sort Columns</button></td>
 
    setSS_IndexColumns,   // from ../index.js, Sort Column
 
    setSS_IndexColumns:(S:number[])=>void
 
{
/*
 

*/}
 
SS_IndexColumns:number[],
setSS_IndexColumns:(S:number[])=>void,
 
SS_IndexColumns,
setSS_IndexColumns
 
SS_IndexColumns={SS_IndexColumns01}
setSS_IndexColumns={setSS_IndexColumns01}
 
//****************************************************************************
 

    // Index Columns of C01_Table
    const [SS_IndexColumns01,setSS_IndexColumns01]=useState<number[]>(SS_Columns.map(Column=>Column.Key))
    // Index Columns of C02_ColumnName
    const [SS_IndexColumns02,setSS_IndexColumns02]=useState<number[]>(SS_Columns.map(Column=>Column.Key))

//****************************************************************************
// USEEFFECT_00: Update SS_IndexColumns01 and SS_IndexColumns02
//****************************************************************************
    useEffect(() => {
    // Variable
    let ss_IndexColumns:number[]=[...SS_Columns].map(Column=>Column.Key)
//****************************************************************************
    // Add object key inside SS_IndexColumns01 
    for(let i:number=0;i<ss_IndexColumns.length;i++){
        if(SS_IndexColumns01.includes(ss_IndexColumns[i])===false){
            let ss_IndexColumns01 =[...SS_IndexColumns01] 
            setSS_IndexColumns01([...ss_IndexColumns01,ss_IndexColumns[i]]);
        }
    }
//****************************************************************************
    // Add object key inside SS_IndexColumns02
    for(let i:number=0;i<ss_IndexColumns.length;i++){
        if(SS_IndexColumns02.includes(ss_IndexColumns[i])===false){
            let ss_IndexColumns02 =[...SS_IndexColumns02] 
            setSS_IndexColumns02([ss_IndexColumns[i],...ss_IndexColumns02]);
        }
    }
//****************************************************************************
    // Delete undefined SS_IndexColumns01 object
    let let_DeleteTarget01:number[]=[]
    let IsDelete01:boolean=false
    for(let i:number=0;i<SS_IndexColumns01.length;i++){
        const let_Name:TS_Row|undefined=SS_Columns.find(({Key})=>Key === SS_IndexColumns01[i])
        if(typeof let_Name==='undefined'){
            // https://www.tutorialspoint.com/typescript/typescript_array_push.htm
            let_DeleteTarget01.push(SS_IndexColumns01[i])
            IsDelete01=true
        }
    }
    if(IsDelete01===true){
        // https://stackoverflow.com/questions/5767325/how-can-i-remove-a-specific-item-from-an-array-in-javascript
        let ss_IndexColumns01:number[]=[...SS_IndexColumns01]
        let let_UpdateColumns01:number[]=ss_IndexColumns01.filter(Key=>!let_DeleteTarget01.includes(Key))
        setSS_IndexColumns01(let_UpdateColumns01)
        let_DeleteTarget01=[]
        IsDelete01=false
    }
//****************************************************************************
    // Delete undefined SS_IndexColumns02 object
    let let_DeleteTarget02:number[]=[]
    let IsDelete02:boolean=false
    for(let i:number=0;i<SS_IndexColumns02.length;i++){
        const let_Name:TS_Row|undefined=SS_Columns.find(({Key})=>Key === SS_IndexColumns02[i])
        if(typeof let_Name==='undefined'){
            // https://www.tutorialspoint.com/typescript/typescript_array_push.htm
            let_DeleteTarget02.push(SS_IndexColumns02[i])
            IsDelete02=true
        }
    }
    if(IsDelete02===true){
        // https://stackoverflow.com/questions/5767325/how-can-i-remove-a-specific-item-from-an-array-in-javascript
        let ss_IndexColumns02:number[]=[...SS_IndexColumns02]
        let let_UpdateColumns02:number[]=ss_IndexColumns02.filter(Key=>!let_DeleteTarget02.includes(Key))
        setSS_IndexColumns02(let_UpdateColumns02)
        let_DeleteTarget02=[]
        IsDelete02=false
    }
//****************************************************************************
    }, [SS_Columns,SS_IndexColumns01,SS_IndexColumns02]);
 
SS_IndexColumns={SS_IndexColumns01}
setSS_IndexColumns={setSS_IndexColumns01}
 
import { U_IsSelect } from '../../T02_ColumnName/U_IsSelect';
 
                    IsSelect: ThisColumn.IsSelect,
                    IsVisible: true
 
                IsSelect:IsNewSelect,
                IsVisible: true
 
.filter(Column=>
        Column.IsSelect===true
        // https://react.dev/learn/rendering-lists
    ));
 
    const let_Columns:TS_ColumnName[] = ([...SS_PrivateColumns].filter(Column=>
        Column.IsSelect===true
        // https://react.dev/learn/rendering-lists
    ));
 
    // Drag and Drop Columns
    const Ref_DragColumn = useRef<number>(0)
    const Ref_DragOverColumn = useRef<number>(0)
 
/*
 
//****************************************************************************
 
//****************************************************************************
// JSX_01: Testing, Debugging
//****************************************************************************
    const JSX_TestColumn:JSX.Element[] = SS_Columns.map((Column)=>
        <tr>
        <td>{Column.Name}</td>
        <td>|{Column.Key}</td>
        <td>|{Column.IsSelect.toString()}</td>
        <td>|{Column.IsVisible.toString()}</td>
        </tr>
        );
    function JSXName(ThisKey:number):string{
        const let_Name=SS_Columns.find(({Key})=>Key === ThisKey)
        if (let_Name===undefined){
            return 'undefined'
        }
        else{
            return let_Name.Name
        }
    }
    const JSX_TestColumn01:JSX.Element[] = SS_IndexColumns01.map((Key)=>
        <div>
        <td>* {Key}</td>
        <td>| {JSXName(Key)}</td>
        </div>
        );
    const JSX_TestColumn02:JSX.Element[] = SS_IndexColumns02.map((Key)=>
        <div>
        <td>* {Key}</td>
        <td>| {JSXName(Key)}</td>
        </div>
        );
    
    const JSX_DivTestColumn:JSX.Element=<
div id='Body' >
<hr/>
    <div>
    <h1>Testing (Main)</h1>
    <h2>Length:{SS_Columns.length}</h2>
    {JSX_TestColumn}
    </div>
<hr/>
    <div>
    <h1>JSX_TestColumn01</h1>
    <h2>Length:{SS_IndexColumns01.length}</h2>
    {JSX_TestColumn01}
    </div>
<hr/>
    <div>
    <h1>JSX_TestColumn02</h1>
    <h2>Length:{SS_IndexColumns02.length}</h2>
    {JSX_TestColumn02}
    </div>
<hr/>
</div>
 
    IsSelect:boolean,   // DEFAULT: false
                        // Is the Column display in C01_Table
                        // const [SS_IsSelect,setSS_IsSelect]=useState<boolean>(false)

    IsVisible:boolean,  // DEFAULT: true
                        // Is the Column display in C02_Column
                        // If the column satisfy 1 of 3 conditions
                        // 1. Consist of SS_Filter in their name
                        // 2. New Column 
                        // 3. Renamed Column 
                        // Then it is visible in C02_Column and IsVisible = true
 
// f_DSort is used for sort SS_Column in Alphabet order
// We want to access SS_Columns.Name,
// so that we can calculate valid SS_IndexColumns
    SS_Columns    = {SS_Columns}
    setSS_IndexColumns = {setSS_IndexColumns}

 
<button>Edit</button><button>X</button>
 
<button>Edit</button><button>X</button>
 
: 2
 
<input></input>
 
<button>Sort</button>
 

{
/*
 
{JSX_TH_Columns}
 
</tr>
 
</tr>
 
    <th>Row Index</th>
 
<tr>
    <th>Row Index</th>
    {JSX_TH_Columns}
    <th>Create new column as</th>
</tr>
 
<button>...</button>
 
<td><button className='C01id_Header' /*onClick={()=>f_DSort(true)}*/>Import Data</button></td>
 
<td><button className='C01id_Header' /*onClick={()=>f_DSort(true)}*/>Export Filtered Data</button></td>
<td><button className='C01id_Header' /*onClick={()=>f_DSort(true)}*/>Rename Table</button></td>
<td><button className='C01id_Header' /*onClick={()=>f_DSort(true)}*/>Inspecting Table</button></td>
 
        
 
            draggable
            onDragStart={()=>{Ref_DragColumn.current=index}}
            onDragEnter={()=>{Ref_DragOverColumn.current=index}}
            onDragEnd={()=>f_Drag()}
            onDragOver={(e)=>e.preventDefault()}
 

//****************************************************************************
// FUNCTION_01: Drag and Drop Column
//****************************************************************************
    // https://youtu.be/_nZCvxJOPwU?si=ixJXOlrb40z19L2p
    function f_Drag():void{
        let ss_IndexColumns:number[]=SS_IndexColumns
        const let_DragColumnCurrent:number=ss_IndexColumns[Ref_DragColumn.current]
        ss_IndexColumns[Ref_DragColumn.current] = ss_IndexColumns[Ref_DragOverColumn.current]
        ss_IndexColumns[Ref_DragOverColumn.current] = let_DragColumnCurrent
        setSS_IndexColumns(ss_IndexColumns)
        setSS_PrivateReset(true)
    }
 
//****************************************************************************
// FUNCTION_02: Utility, Will Develop Later
//****************************************************************************
    function f_OpenSetting():void{
        let ss_Columns:TS_ColumnName[] = [...SS_Columns];
        //alert(JSON.stringify(list))
        alert(ss_Columns.length)
        // https://stackoverflow.com/questions/5612787/converting-an-object-to-a-string

        // * [C]: Create Copy Column
        // * [R]: Filter Data
        // * [R]: Inspect Column
        // * [R]: Data Visualization with Filter Condition
        // * [U]: Transform Column
        // * [U]: Replace Data
        // * [U]: Delete Data with Filter Condition
    }

 
<button className={'C01id'} onClick={f_OpenSetting}>...</button>
 
else if (let_DefaultDisplay===3){
        JSX_Column=
<>
<button className={'C01id'} onClick={f_UnSelect}>OK</button>
<button className={'C01id'} onClick={f_Cancel}>Cancel</button>
</>
    }
 
<button className={'C01id'} onClick={f_OpenDelete}>X</button>
 
<button className={'C01id'} onClick={f_OpenUnselect} id={C02id_CheckButton} style={{backgroundColor: "white"}}>X</button>
 
//****************************************************************************
// FUNCTION_03: Unselect Column
//****************************************************************************
    const C02id_CheckButton:string = 'C01id_CheckButton'+ThisColumn.Key.toString()
    function f_OpenUnselect():void{
        f_UpdateDisplay(3)
    }

    function f_UnSelect():void{
        // https://react.dev/learn/responding-to-events#preventing-default-behavior
        // https://www.w3schools.com/jsref/met_document_getelementbyid.asp
        let ss_Columns:TS_ColumnName[]= [...SS_Columns];
        let let_UpdateColumn:TS_ColumnName[]=U_IsSelect(ss_Columns,false,undefined,ThisColumn)
        setSS_Columns(let_UpdateColumn);
        // https://stackoverflow.com/questions/11688692/how-to-create-a-list-of-unique-items-in-javascript
    }
 
    //      3|  // UnSelect JSX Column| f_OpenUnSelect => let_DefaultDisplay(3) => Open UnSelect JSX Column
 

// ColumnName Panel
<C02_ColumnName 
SS_Columns={SS_Columns}
setSS_Columns={setSS_Columns}
SS_IndexColumns={SS_IndexColumns02}
setSS_IndexColumns={setSS_IndexColumns02}
/>

// Table Panel
 
// 
 
//
 

// <P00_Header/>

//<div id='Body' >

// ColumnName Panel
// <C02_ColumnName 
// SS_Columns={SS_Columns}
// setSS_Columns={setSS_Columns}
// SS_IndexColumns={SS_IndexColumns02}
// setSS_IndexColumns={setSS_IndexColumns02}
// />

// Table Panel
// <C01_Table 
// SS_Columns={SS_Columns}
// setSS_Columns={setSS_Columns}
// SS_IndexColumns={SS_IndexColumns01}
// setSS_IndexColumns={setSS_IndexColumns01}
// />

// </div>
//****************************************************************************

// <>
// <P00_Header/>
// <P01_Panel/>
// </>
 
import TS_ColumnName from "./T02_ColumnName/An_Index";
 
import C02_ColumnName from "./C02_ColumnName";
import P00_Header from './P00_Header'
import P01_Panel from './P01_Panel_H/index'
 
eng+
 
'/Users/imac/Desktop/SoloOpenSourceProject/JOCR/TestImage/Expenses_Macro/IMG_7553.jpeg'
 
img=img[:,200:1000]
 
ShowMustGoOn(img)
 
#img=Image.open(img)
 
txts.append(txt)
 
txts=[]
 
'''
 
    
 
for path in paths:
    # Modify image
 
print('Hii')
 
img = get_grayscale(img)
 

Hellp
 
Day 17
* Learn how to create hook 
* Try to avoid creating nested component, but it does not works, even with the help of chat gpt 
* 
To Do Now (Read and fix this)
 * Create custom hook 
 * avoid nested component
1. https://blog.webdevsimplified.com/2019-11/how-to-write-custom-hooks/?fbclid=IwAR11CqBKZB1UttksdQe_VEOWClHARAHaRP7LfEHwTC9YwMIz--ha3DvNAXc
2. https://youtu.be/b0IZo2Aho9Y?si=Fu1eHkhY29AigPgA
3. https://youtu.be/TNhaISOUy6Q?si=MewpxqgUjrDNFUSX
4. https://youtu.be/QQYeipc_cik?si=WZspHtbEE5Okbm0f
 
img = sharpen(img)
 
img = erode(img)
 
img = erode(img)
 
k3*24+
 
k3*24+
 
'''
 
eng+
 
+tha
 
eng+
 
JoJOCR.
 
    
    
 
k1=-2
 
k2=-0.1
 
2*
 
+2*0.1
 
-0.1,-0.1,-0.1,-0.1
 
'''
 
'''
 
      
 
'''
 
'''
 
import cv2
from kernel import ShowMustGoOn 
path='/Users/imac/Desktop/SoloOpenSourceProject/JOCR/TestImage/Expenses_Macro/IMG_7553.jpeg'
image = cv2.imread(path)

filtered_image = image#cv2.medianBlur(image, 5)
ShowMustGoOn(filtered_image)

# Bilateral filtering
filtered_image = cv2.bilateralFilter(image, 9, 75, 75)
ShowMustGoOn(filtered_image)

# Adaptive threshold method
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
_, adaptive_threshold = cv2.threshold(gray_image, 0, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 25, 10)
ShowMustGoOn(adaptive_threshold)
 
'image.jpg
 
cv2.waitKey(0)
cv2.destroyAllWindows()
 
cv2.waitKey(0)
cv2.destroyAllWindows()
 
cv2.waitKey(0)
cv2.destroyAllWindows()
 
'median-filtered image', 
 
import cv2
image = cv2.imread('image.jpg')
 
import cv2
image = cv2.imread('image.jpg')
 
filtered_image = cv2.medianBlur(image, 5)
 
# Saving Text
f = open("demo.txt", "a",encoding="utf-8")
f.write(''.join(txt))
f.close()
 
from kernel import canny,get_grayscale,sharpen,erode,dilate,opening,ShowMustGoOn 
from txt import pensil, eraser
 
ile_to_delete
 

2ÇØÇ
ÇØÇiÇØÇsÇØÇ ÇØÇsÇØÇcÇØÇeÇØÇ ÇØÇSÇØÇHÇØÇ ÇØÇwÇØÇaÇØÇeÇØÇeÇØÇnÇØÇtÇØÇ)ÇØÇ ÇØÇoÇØÇnÇØÇeÇØÇ ÇØÇ"ÇØÇ
ÇØÇvÇØÇiÇØÇnÇØÇ ÇØÇFÇØÇHÇØÇ ÇØÇWÇØÇoÇØÇrÇØÇ ÇØÇ7ÇØÇ7ÇØÇ7ÇØÇ)ÇØÇ ÇØÇGÇØÇiÇØÇnÇØÇaÇØÇ ÇØÇGÇØÇmÇØÇnÇØÇwÇØÇyÇØÇ ÇØÇ:ÇØÇ
ÇØÇgÇØÇeÇØÇiÇØÇiÇØÇnÇØÇeÇØÇwÇØÇ ÇØÇrÇØÇyÇØÇ ÇØÇPÇØÇhÇØÇ ÇØÇOÇØÇTÇØÇ ÇØÇeÇØÇeÇØÇ ÇØÇDÇØÇeÇØÇnÇØÇeÇØÇ,ÇØÇ ÇØÇmÇØÇeÇØÇnÇØÇeÇØÇ ÇØÇ7ÇØÇ
ÇØÇ‘ÇØÇ ÇØÇ;ÇØÇ ÇØÇ7ÇØÇ ÇØÇ;ÇØÇ
ÇØÇcÇØÇuÇØÇlÇØÇtÇØÇiÇØÇeÇØÇsÇØÇ ÇØÇwÇØÇeÇØÇ ÇØÇHÇØÇFÇØÇ ÇØÇeÇØÇrÇØÇiÇØÇnÇØÇ ÇØÇhÇØÇeÇØÇtÇØÇuÇØÇtÇØÇuÇØÇmÇØÇ ÇØÇnÇØÇeÇØÇiÇØÇiÇØÇdÇØÇ ÇØÇ‘ÇØÇ
ÇØÇoÇØÇrÇØÇpÇØÇ ÇØÇeÇØÇrÇØÇeÇØÇ ÇØÇ-ÇØÇ
ÇØÇ~ÇØÇ ÇØÇ©ÇØÇ ÇØÇPÇØÇeÇØÇtÇØÇ ÇØÇhÇØÇuÇØÇeÇØÇ ÇØÇnÇØÇaÇØÇnÇØÇ ÇØÇoÇØÇnÇØÇeÇØÇ ÇØÇ—ÇØÇ
ÇØÇrÇØÇaÇØÇ ÇØÇeÇØÇaÇØÇeÇØÇ ÇØÇ.ÇØÇ
ÇØÇtÇØÇoÇØÇnÇØÇsÇØÇ ÇØÇaÇØÇTÇØÇ
ÇØÇ©ÇØÇ ÇØÇ«ÇØÇ ÇØÇwÇØÇrÇØÇ ÇØÇPÇØÇaÇØÇlÇØÇsÇØÇ ÇØÇ©ÇØÇ
ÇØÇoÇØÇnÇØÇ ÇØÇ:ÇØÇ ÇØÇaÇØÇrÇØÇtÇØÇeÇØÇ ÇØÇaÇØÇeÇØÇfÇØÇuÇØÇiÇØÇeÇØÇ
ÇØÇfÇØÇrÇØÇsÇØÇvÇØÇeÇØÇuÇØÇsÇØÇ ÇØÇaÇØÇnÇØÇtÇØÇ
ÇØÇsÇØÇrÇØÇoÇØÇ ÇØÇaÇØÇ*ÇØÇ ÇØÇaÇØÇdÇØÇ ÇØÇoÇØÇ
ÇØÇEÇØÇEÇØÇ ÇØÇiÇØÇeÇØÇ ÇØÇaÇØÇ
ÇØÇaÇØÇpÇØÇnÇØÇiÇØÇeÇØÇ ÇØÇ-ÇØÇ ÇØÇSÇØÇAÇØÇGÇØÇAÇØÇSÇØÇ ÇØÇsÇØÇiÇØÇdÇØÇlÇØÇiÇØÇaÇØÇtÇØÇaÇØÇaÇØÇdÇØÇeÇØÇsÇØÇaÇØÇiÇØÇaÇØÇeÇØÇaÇØÇnÇØÇeÇØÇnÇØÇsÇØÇiÇØÇlÇØÇiÇØÇeÇØÇaÇØÇiÇØÇaÇØÇsÇØÇ ÇØÇtÇØÇoÇØÇnÇØÇsÇØÇ ÇØÇeÇØÇtÇØÇ ÇØÇrÇØÇeÇØÇ ÇØÇhÇØÇeÇØÇ ÇØÇaÇØÇgÇØÇaÇØÇtÇØÇeÇØÇ
ÇØÇ©ÇØÇ ÇØÇ-ÇØÇ ÇØÇ_ÇØÇ ÇØÇeÇØÇ
ÇØÇsÇØÇuÇØÇaÇØÇ ÇØÇtÇØÇ ÇØÇ-ÇØÇ
ÇØÇ€ÇØÇ ÇØÇaÇØÇ ÇØÇ¥ÇØÇ ÇØÇaÇØÇ?ÇØÇ ÇØÇ.ÇØÇ ÇØÇ-ÇØÇ ÇØÇwÇØÇaÇØÇ ÇØÇ-ÇØÇ ÇØÇ'ÇØÇ ÇØÇ°ÇØÇ
ÇØÇ5ÇØÇ.ÇØÇeÇØÇ@ÇØÇ ÇØÇ“ÇØÇAÇØÇsÇØÇ ÇØÇcÇØÇ ÇØÇ.ÇØÇ ÇØÇ‘ÇØÇ?ÇØÇ@ÇØÇ ÇØÇcÇØÇeÇØÇ ÇØÇhÇØÇtÇØÇsÇØÇ
ÇØÇeÇØÇ ÇØÇ,ÇØÇ ÇØÇmÇØÇaÇØÇoÇØÇ ÇØÇsÇØÇeÇØÇeÇØÇsÇØÇ?ÇØÇ ÇØÇMÇØÇaÇØÇrÇØÇeÇØÇ ÇØÇeÇØÇsÇØÇtÇØÇoÇØÇyÇØÇ ÇØÇ1ÇØÇ.ÇØÇ ÇØÇ;ÇØÇ ÇØÇ3ÇØÇ0ÇØÇ.ÇØÇ ÇØÇaÇØÇoÇØÇ ÇØÇnÇØÇyÇØÇ
ÇØÇ:ÇØÇ ÇØÇ>ÇØÇ.ÇØÇ«ÇØÇ ÇØÇ?ÇØÇ_ÇØÇ-ÇØÇ
ÇØÇaÇØÇ ÇØÇbÇØÇeÇØÇ,ÇØÇ ÇØÇSÇØÇOÇØÇ ÇØÇaÇØÇ”ÇØÇ ÇØÇmÇØÇeÇØÇrÇØÇ ÇØÇ'ÇØÇ ÇØÇrÇØÇeÇØÇ ÇØÇ7ÇØÇ?ÇØÇ)ÇØÇ ÇØÇ’ÇØÇ ÇØÇ‘ÇØÇ ÇØÇ'ÇØÇ
ÇØÇ ÇØÇ)ÇØÇ ÇØÇ.ÇØÇoÇØÇ5ÇØÇ ÇØÇsÇØÇeÇØÇeÇØÇsÇØÇoÇØÇoÇØÇeÇØÇrÇØÇtÇØÇsÇØÇeÇØÇ ÇØÇcÇØÇoÇØÇvÇØÇeÇØÇtÇØÇ ÇØÇmÇØÇnÇØÇ.ÇØÇ ÇØÇAÇØÇTÇØÇWÇØÇ ÇØÇ:ÇØÇ ÇØÇ~ÇØÇ~ÇØÇ ÇØÇ_ÇØÇ ÇØÇiÇØÇ)ÇØÇ
ÇØÇLÇØÇ2ÇØÇ1ÇØÇ9ÇØÇ ÇØÇ2ÇØÇiÇØÇ4ÇØÇlÇØÇSÇØÇiÇØÇeÇØÇvÇØÇsÇØÇ,ÇØÇ.ÇØÇ ÇØÇ7ÇØÇ6ÇØÇ ÇØÇGÇØÇoÇØÇeÇØÇrÇØÇ ÇØÇeÇØÇTÇØÇ ÇØÇrÇØÇyÇØÇoÇØÇsÇØÇ ÇØÇfÇØÇeÇØÇ ÇØÇAÇØÇTÇØÇwÇØÇ ÇØÇ-ÇØÇ ÇØÇwÇØÇwÇØÇ.ÇØÇ ÇØÇcÇØÇoÇØÇ
ÇØÇeÇØÇ ÇØÇ2ÇØÇ@ÇØÇeÇØÇ)ÇØÇ ÇØÇ2ÇØÇ1ÇØÇ4ÇØÇ5ÇØÇ7ÇØÇ0ÇØÇ4ÇØÇ ÇØÇSÇØÇOÇØÇPÇØÇ.ÇØÇ ÇØÇ7ÇØÇ ÇØÇWÇØÇeÇØÇ ÇØÇ4ÇØÇmÇØÇ ÇØÇmÇØÇuÇØÇtÇØÇeÇØÇ ÇØÇ1ÇØÇ ÇØÇrÇØÇvÇØÇ ÇØÇ4ÇØÇ.ÇØÇ ÇØÇOÇØÇOÇØÇ ÇØÇ4ÇØÇ ÇØÇeÇØÇ
ÇØÇ.ÇØÇ-ÇØÇ ÇØÇ=ÇØÇ ÇØÇ«ÇØÇ
ÇØÇoÇØÇvÇØÇrÇØÇ ÇØÇ4ÇØÇ5ÇØÇ8ÇØÇ ÇØÇOÇØÇOÇØÇRÇØÇsÇØÇ,ÇØÇ ÇØÇMÇØÇIÇØÇUÇØÇRÇØÇAÇØÇ ÇØÇSÇØÇyÇØÇ)ÇØÇ.ÇØÇ ÇØÇmÇØÇeÇØÇ ÇØÇAÇØÇrÇØÇTÇØÇ ÇØÇ1ÇØÇ ÇØÇfÇØÇyÇØÇ ÇØÇ3ÇØÇ.ÇØÇcÇØÇ8ÇØÇ ÇØÇiÇØÇ ÇØÇ4ÇØÇ5ÇØÇ.ÇØÇ2ÇØÇ
ÇØÇpÇØÇdÇØÇ ÇØÇoÇØÇrÇØÇ ÇØÇ'ÇØÇ ÇØÇ—ÇØÇ
ÇØÇ°ÇØÇ ÇØÇBÇØÇeÇØÇsÇØÇtÇØÇ ÇØÇ2ÇØÇiÇØÇlÇØÇeÇØÇsÇØÇwÇØÇeÇØÇ7ÇØÇTÇØÇsÇØÇeÇØÇsÇØÇsÇØÇ ÇØÇWÇØÇrÇØÇoÇØÇmÇØÇsÇØÇ ÇØÇ1ÇØÇ ÇØÇ¥ÇØÇ ÇØÇ7ÇØÇ9ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ9ÇØÇ ÇØÇ1ÇØÇ ÇØÇ7ÇØÇ5ÇØÇ.ÇØÇ2ÇØÇ3ÇØÇ ÇØÇ¢ÇØÇ
ÇØÇOÇØÇ.ÇØÇ4ÇØÇ%ÇØÇ%ÇØÇ ÇØÇ2ÇØÇ ÇØÇlÇØÇoÇØÇoÇØÇsÇØÇeÇØÇ ÇØÇiÇØÇ ÇØÇ.ÇØÇ ÇØÇ.ÇØÇ ÇØÇ3ÇØÇ7ÇØÇ ÇØÇ.ÇØÇ@ÇØÇ ÇØÇiÇØÇ ÇØÇiÇØÇ8ÇØÇ.ÇØÇ2ÇØÇ3ÇØÇ
ÇØÇrÇØÇaÇØÇ)ÇØÇ ÇØÇ4ÇØÇ.ÇØÇ3ÇØÇ8ÇØÇ:ÇØÇ ÇØÇ2ÇØÇ1ÇØÇ3ÇØÇ1ÇØÇ3ÇØÇ5ÇØÇ0ÇØÇ1ÇØÇ7ÇØÇ5ÇØÇ2ÇØÇ5ÇØÇ1ÇØÇ ÇØÇsÇØÇhÇØÇeÇØÇeÇØÇtÇØÇ ÇØÇMÇØÇeÇØÇtÇØÇ ÇØÇiÇØÇ)ÇØÇ ÇØÇ7ÇØÇ ÇØÇ4ÇØÇ0ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ ÇØÇ1ÇØÇ7ÇØÇ4ÇØÇ.ÇØÇ2ÇØÇ5ÇØÇ ÇØÇ¢ÇØÇCÇØÇ
ÇØÇDÇØÇLÇØÇ ÇØÇ2ÇØÇiÇØÇlÇØÇeÇØÇ7ÇØÇTÇØÇeÇØÇOÇØÇlÇØÇeÇØÇcÇØÇeÇØÇeÇØÇeÇØÇ ÇØÇWÇØÇNÇØÇ ÇØÇ1ÇØÇ ÇØÇ'ÇØÇ ÇØÇ9ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ ÇØÇ|ÇØÇ ÇØÇ1ÇØÇ8ÇØÇ6ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ
ÇØÇ@ÇØÇ ÇØÇ|ÇØÇ ÇØÇtÇØÇeÇØÇ ÇØÇ2ÇØÇ0ÇØÇ7ÇØÇ0ÇØÇ1ÇØÇ1ÇØÇ2ÇØÇ8ÇØÇ2ÇØÇ ÇØÇrÇØÇaÇØÇhÇØÇ ÇØÇnÇØÇmÇØÇ ÇØÇiÇØÇnÇØÇ ÇØÇ2ÇØÇ9ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ ÇØÇ1ÇØÇ ÇØÇMÇØÇzÇØÇsÇØÇeÇØÇ ÇØÇ8ÇØÇ ÇØÇ¢ÇØÇ
ÇØÇhÇØÇeÇØÇlÇØÇ
ÇØÇPÇØÇeÇØÇ ÇØÇLÇØÇlÇØÇ ÇØÇ2ÇØÇLÇØÇIÇØÇ@ÇØÇMÇØÇOÇØÇIÇØÇIÇØÇ ÇØÇWÇØÇaÇØÇrÇØÇiÇØÇ ÇØÇ.ÇØÇ*ÇØÇ ÇØÇtÇØÇnÇØÇ ÇØÇaÇØÇ7ÇØÇ.ÇØÇ ÇØÇ|ÇØÇ ÇØÇ1ÇØÇ2ÇØÇ ÇØÇ.ÇØÇ@ÇØÇoÇØÇ
ÇØÇiÇØÇ)ÇØÇ ÇØÇsÇØÇ ÇØÇnÇØÇeÇØÇeÇØÇ ÇØÇ4ÇØÇdÇØÇ)ÇØÇ ÇØÇWÇØÇEÇØÇSÇØÇ ÇØÇaÇØÇpÇØÇcÇØÇ)ÇØÇ ÇØÇUÇØÇoÇØÇrÇØÇuÇØÇ ÇØÇaÇØÇrÇØÇnÇØÇ ÇØÇ”ÇØÇ ÇØÇaÇØÇ ÇØÇ2ÇØÇ ÇØÇ1ÇØÇ2ÇØÇ9ÇØÇ.ÇØÇ@ÇØÇ0ÇØÇ ÇØÇ4ÇØÇ
ÇØÇDÇØÇEÇØÇ,ÇØÇ ÇØÇMÇØÇBÇØÇBÇØÇSÇØÇ ÇØÇTÇØÇIÇØÇOÇØÇOÇØÇIÇØÇSÇØÇEÇØÇ?ÇØÇ ÇØÇAÇØÇCÇØÇFÇØÇEÇØÇ!ÇØÇ ÇØÇOÇØÇrÇØÇ ÇØÇOÇØÇEÇØÇMÇØÇ ÇØÇIÇØÇDÇØÇ ÇØÇoÇØÇeÇØÇsÇØÇ ÇØÇ9ÇØÇ ÇØÇvÇØÇwÇØÇ.ÇØÇ ÇØÇ5ÇØÇ.ÇØÇ0ÇØÇ9ÇØÇ ÇØÇ2ÇØÇ ÇØÇ1ÇØÇ2ÇØÇ.ÇØÇ2ÇØÇ0ÇØÇ ÇØÇSÇØÇ
ÇØÇ'ÇØÇ ÇØÇPÇØÇoÇØÇ ÇØÇ.ÇØÇ ÇØÇ.ÇØÇ ÇØÇ.ÇØÇ
ÇØÇ:ÇØÇ ÇØÇ7ÇØÇ1ÇØÇ9ÇØÇ1ÇØÇ1ÇØÇ ÇØÇ7ÇØÇSÇØÇSÇØÇOÇØÇSÇØÇ ÇØÇTÇØÇhÇØÇoÇØÇmÇØÇeÇØÇ.ÇØÇ ÇØÇ1ÇØÇ ÇØÇiÇØÇrÇØÇ ÇØÇ1ÇØÇsÇØÇ ÇØÇoÇØÇoÇØÇ ÇØÇ|ÇØÇ ÇØÇ1ÇØÇ7ÇØÇ5ÇØÇ.ÇØÇ%ÇØÇ
ÇØÇ¥ÇØÇ ÇØÇ-ÇØÇ ÇØÇ1ÇØÇ9ÇØÇ)ÇØÇ ÇØÇ<ÇØÇ
ÇØÇGÇØÇOÇØÇ ÇØÇAÇØÇeÇØÇ ÇØÇcÇØÇwÇØÇaÇØÇpÇØÇhÇØÇaÇØÇwÇØÇyÇØÇ:ÇØÇ ÇØÇ1ÇØÇ)ÇØÇ.ÇØÇ ÇØÇvÇØÇeÇØÇ ÇØÇ’ÇØÇ ÇØÇ1ÇØÇ7ÇØÇ2ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ ÇØÇ|ÇØÇ ÇØÇ1ÇØÇ2ÇØÇ6ÇØÇ.ÇØÇ0ÇØÇ
ÇØÇ*ÇØÇ ÇØÇoÇØÇ
ÇØÇMÇØÇeÇØÇeÇØÇeÇØÇ ÇØÇfÇØÇrÇØÇeÇØÇ ÇØÇeÇØÇsÇØÇcÇØÇ ÇØÇoÇØÇnÇØÇ ÇØÇ;ÇØÇ ÇØÇ1ÇØÇ ÇØÇwÇØÇuÇØÇ ÇØÇ9ÇØÇ9ÇØÇ.ÇØÇ@ÇØÇ0ÇØÇ ÇØÇ|ÇØÇ ÇØÇ7ÇØÇ.ÇØÇcÇØÇeÇØÇ ÇØÇ‘ÇØÇ
ÇØÇ>ÇØÇ
ÇØÇsÇØÇtÇØÇeÇØÇhÇØÇtÇØÇ ÇØÇPÇØÇeÇØÇrÇØÇnÇØÇtÇØÇ ÇØÇiÇØÇcÇØÇ-ÇØÇ2ÇØÇ5ÇØÇ ÇØÇwÇØÇhÇØÇyÇØÇ.ÇØÇ ÇØÇ(ÇØÇ>ÇØÇ ÇØÇ7ÇØÇ ÇØÇ2ÇØÇ5ÇØÇ.ÇØÇ2ÇØÇ ÇØÇ1ÇØÇ ÇØÇ3ÇØÇ1ÇØÇ7ÇØÇ.ÇØÇ5ÇØÇ0ÇØÇ
ÇØÇ¢ÇØÇ ÇØÇ7ÇØÇ3ÇØÇ2ÇØÇ ÇØÇoÇØÇwÇØÇnÇØÇ ÇØÇSÇØÇaÇØÇnÇØÇ.ÇØÇ ÇØÇ(ÇØÇeÇØÇeÇØÇ ÇØÇiÇØÇ.ÇØÇ ÇØÇ4ÇØÇ2ÇØÇ.ÇØÇ0ÇØÇ0ÇØÇ ÇØÇ2ÇØÇ ÇØÇeÇØÇaÇØÇ.ÇØÇ ÇØÇ‘ÇØÇ
ÇØÇ7ÇØÇ ÇØÇ-ÇØÇ ÇØÇ-ÇØÇ
ÇØÇaÇØÇ ÇØÇeÇØÇaÇØÇeÇØÇ ÇØÇBÇØÇeÇØÇgÇØÇ.ÇØÇ ÇØÇHÇØÇaÇØÇ ÇØÇeÇØÇwÇØÇeÇØÇ ÇØÇvÇØÇeÇØÇrÇØÇeÇØÇ ÇØÇpÇØÇeÇØÇcÇØÇsÇØÇ ÇØÇlÇØÇwÇØÇ ÇØÇ7ÇØÇ5ÇØÇ.ÇØÇ@ÇØÇ ÇØÇ2ÇØÇ ÇØÇmÇØÇoÇØÇsÇØÇ
ÇØÇtÇØÇeÇØÇ.ÇØÇ ÇØÇ-ÇØÇ ÇØÇ-ÇØÇ ÇØÇ‘ÇØÇ
ÇØÇ<ÇØÇ1ÇØÇ ÇØÇ=ÇØÇ ÇØÇPÇØÇ
ÇØÇ.ÇØÇ ÇØÇTÇØÇwÇØÇiÇØÇ ÇØÇaÇØÇ
ÇØÇeÇØÇeÇØÇrÇØÇ ÇØÇoÇØÇ ÇØÇ:ÇØÇ ÇØÇ‘ÇØÇ
ÇØÇbÇØÇsÇØÇ
ÇØÇ:ÇØÇ ÇØÇeÇØÇeÇØÇ
ÇØÇ.ÇØÇ ÇØÇéÇØÇ ÇØÇaÇØÇeÇØÇ.ÇØÇ ÇØÇaÇØÇiÇØÇ

 
2Ç
ÇiÇsÇ ÇsÇcÇeÇ ÇSÇHÇ ÇwÇaÇeÇeÇnÇtÇ)Ç ÇoÇnÇeÇ Ç"Ç
ÇvÇiÇnÇ ÇFÇHÇ ÇWÇoÇrÇ Ç7Ç7Ç7Ç)Ç ÇGÇiÇnÇaÇ ÇGÇmÇnÇwÇyÇ Ç:Ç
ÇgÇeÇiÇiÇnÇeÇwÇ ÇrÇyÇ ÇPÇhÇ ÇOÇTÇ ÇeÇeÇ ÇDÇeÇnÇeÇ,Ç ÇmÇeÇnÇeÇ Ç7Ç
Ç‘Ç Ç;Ç Ç7Ç Ç;Ç
ÇcÇuÇlÇtÇiÇeÇsÇ ÇwÇeÇ ÇHÇFÇ ÇeÇrÇiÇnÇ ÇhÇeÇtÇuÇtÇuÇmÇ ÇnÇeÇiÇiÇdÇ Ç‘Ç
ÇoÇrÇpÇ ÇeÇrÇeÇ Ç-Ç
Ç~Ç Ç©Ç ÇPÇeÇtÇ ÇhÇuÇeÇ ÇnÇaÇnÇ ÇoÇnÇeÇ Ç—Ç
ÇrÇaÇ ÇeÇaÇeÇ Ç.Ç
ÇtÇoÇnÇsÇ ÇaÇTÇ
Ç©Ç Ç«Ç ÇwÇrÇ ÇPÇaÇlÇsÇ Ç©Ç
ÇoÇnÇ Ç:Ç ÇaÇrÇtÇeÇ ÇaÇeÇfÇuÇiÇeÇ
ÇfÇrÇsÇvÇeÇuÇsÇ ÇaÇnÇtÇ
ÇsÇrÇoÇ ÇaÇ*Ç ÇaÇdÇ ÇoÇ
ÇEÇEÇ ÇiÇeÇ ÇaÇ
ÇaÇpÇnÇiÇeÇ Ç-Ç ÇSÇAÇGÇAÇSÇ ÇsÇiÇdÇlÇiÇaÇtÇaÇaÇdÇeÇsÇaÇiÇaÇeÇaÇnÇeÇnÇsÇiÇlÇiÇeÇaÇiÇaÇsÇ ÇtÇoÇnÇsÇ ÇeÇtÇ ÇrÇeÇ ÇhÇeÇ ÇaÇgÇaÇtÇeÇ
Ç©Ç Ç-Ç Ç_Ç ÇeÇ
ÇsÇuÇaÇ ÇtÇ Ç-Ç
Ç€Ç ÇaÇ Ç¥Ç ÇaÇ?Ç Ç.Ç Ç-Ç ÇwÇaÇ Ç-Ç Ç'Ç Ç°Ç
Ç5Ç.ÇeÇ@Ç Ç“ÇAÇsÇ ÇcÇ Ç.Ç Ç‘Ç?Ç@Ç ÇcÇeÇ ÇhÇtÇsÇ
ÇeÇ Ç,Ç ÇmÇaÇoÇ ÇsÇeÇeÇsÇ?Ç ÇMÇaÇrÇeÇ ÇeÇsÇtÇoÇyÇ Ç1Ç.Ç Ç;Ç Ç3Ç0Ç.Ç ÇaÇoÇ ÇnÇyÇ
Ç:Ç Ç>Ç.Ç«Ç Ç?Ç_Ç-Ç
ÇaÇ ÇbÇeÇ,Ç ÇSÇOÇ ÇaÇ”Ç ÇmÇeÇrÇ Ç'Ç ÇrÇeÇ Ç7Ç?Ç)Ç Ç’Ç Ç‘Ç Ç'Ç
Ç Ç)Ç Ç.ÇoÇ5Ç ÇsÇeÇeÇsÇoÇoÇeÇrÇtÇsÇeÇ ÇcÇoÇvÇeÇtÇ ÇmÇnÇ.Ç ÇAÇTÇWÇ Ç:Ç Ç~Ç~Ç Ç_Ç ÇiÇ)Ç
ÇLÇ2Ç1Ç9Ç Ç2ÇiÇ4ÇlÇSÇiÇeÇvÇsÇ,Ç.Ç Ç7Ç6Ç ÇGÇoÇeÇrÇ ÇeÇTÇ ÇrÇyÇoÇsÇ ÇfÇeÇ ÇAÇTÇwÇ Ç-Ç ÇwÇwÇ.Ç ÇcÇoÇ
ÇeÇ Ç2Ç@ÇeÇ)Ç Ç2Ç1Ç4Ç5Ç7Ç0Ç4Ç ÇSÇOÇPÇ.Ç Ç7Ç ÇWÇeÇ Ç4ÇmÇ ÇmÇuÇtÇeÇ Ç1Ç ÇrÇvÇ Ç4Ç.Ç ÇOÇOÇ Ç4Ç ÇeÇ
Ç.Ç-Ç Ç=Ç Ç«Ç
ÇoÇvÇrÇ Ç4Ç5Ç8Ç ÇOÇOÇRÇsÇ,Ç ÇMÇIÇUÇRÇAÇ ÇSÇyÇ)Ç.Ç ÇmÇeÇ ÇAÇrÇTÇ Ç1Ç ÇfÇyÇ Ç3Ç.ÇcÇ8Ç ÇiÇ Ç4Ç5Ç.Ç2Ç
ÇpÇdÇ ÇoÇrÇ Ç'Ç Ç—Ç
Ç°Ç ÇBÇeÇsÇtÇ Ç2ÇiÇlÇeÇsÇwÇeÇ7ÇTÇsÇeÇsÇsÇ ÇWÇrÇoÇmÇsÇ Ç1Ç Ç¥Ç Ç7Ç9Ç.Ç0Ç0Ç9Ç Ç1Ç Ç7Ç5Ç.Ç2Ç3Ç Ç¢Ç
ÇOÇ.Ç4Ç%Ç%Ç Ç2Ç ÇlÇoÇoÇsÇeÇ ÇiÇ Ç.Ç Ç.Ç Ç3Ç7Ç Ç.Ç@Ç ÇiÇ ÇiÇ8Ç.Ç2Ç3Ç
ÇrÇaÇ)Ç Ç4Ç.Ç3Ç8Ç:Ç Ç2Ç1Ç3Ç1Ç3Ç5Ç0Ç1Ç7Ç5Ç2Ç5Ç1Ç ÇsÇhÇeÇeÇtÇ ÇMÇeÇtÇ ÇiÇ)Ç Ç7Ç Ç4Ç0Ç.Ç0Ç0Ç Ç1Ç7Ç4Ç.Ç2Ç5Ç Ç¢ÇCÇ
ÇDÇLÇ Ç2ÇiÇlÇeÇ7ÇTÇeÇOÇlÇeÇcÇeÇeÇeÇ ÇWÇNÇ Ç1Ç Ç'Ç Ç9Ç.Ç0Ç0Ç Ç|Ç Ç1Ç8Ç6Ç.Ç0Ç0Ç
Ç@Ç Ç|Ç ÇtÇeÇ Ç2Ç0Ç7Ç0Ç1Ç1Ç2Ç8Ç2Ç ÇrÇaÇhÇ ÇnÇmÇ ÇiÇnÇ Ç2Ç9Ç.Ç0Ç0Ç Ç1Ç ÇMÇzÇsÇeÇ Ç8Ç Ç¢Ç
ÇhÇeÇlÇ
ÇPÇeÇ ÇLÇlÇ Ç2ÇLÇIÇ@ÇMÇOÇIÇIÇ ÇWÇaÇrÇiÇ Ç.Ç*Ç ÇtÇnÇ ÇaÇ7Ç.Ç Ç|Ç Ç1Ç2Ç Ç.Ç@ÇoÇ
ÇiÇ)Ç ÇsÇ ÇnÇeÇeÇ Ç4ÇdÇ)Ç ÇWÇEÇSÇ ÇaÇpÇcÇ)Ç ÇUÇoÇrÇuÇ ÇaÇrÇnÇ Ç”Ç ÇaÇ Ç2Ç Ç1Ç2Ç9Ç.Ç@Ç0Ç Ç4Ç
ÇDÇEÇ,Ç ÇMÇBÇBÇSÇ ÇTÇIÇOÇOÇIÇSÇEÇ?Ç ÇAÇCÇFÇEÇ!Ç ÇOÇrÇ ÇOÇEÇMÇ ÇIÇDÇ ÇoÇeÇsÇ Ç9Ç ÇvÇwÇ.Ç Ç5Ç.Ç0Ç9Ç Ç2Ç Ç1Ç2Ç.Ç2Ç0Ç ÇSÇ
Ç'Ç ÇPÇoÇ Ç.Ç Ç.Ç Ç.Ç
Ç:Ç Ç7Ç1Ç9Ç1Ç1Ç Ç7ÇSÇSÇOÇSÇ ÇTÇhÇoÇmÇeÇ.Ç Ç1Ç ÇiÇrÇ Ç1ÇsÇ ÇoÇoÇ Ç|Ç Ç1Ç7Ç5Ç.Ç%Ç
Ç¥Ç Ç-Ç Ç1Ç9Ç)Ç Ç<Ç
ÇGÇOÇ ÇAÇeÇ ÇcÇwÇaÇpÇhÇaÇwÇyÇ:Ç Ç1Ç)Ç.Ç ÇvÇeÇ Ç’Ç Ç1Ç7Ç2Ç.Ç0Ç0Ç Ç|Ç Ç1Ç2Ç6Ç.Ç0Ç
Ç*Ç ÇoÇ
ÇMÇeÇeÇeÇ ÇfÇrÇeÇ ÇeÇsÇcÇ ÇoÇnÇ Ç;Ç Ç1Ç ÇwÇuÇ Ç9Ç9Ç.Ç@Ç0Ç Ç|Ç Ç7Ç.ÇcÇeÇ Ç‘Ç
Ç>Ç
ÇsÇtÇeÇhÇtÇ ÇPÇeÇrÇnÇtÇ ÇiÇcÇ-Ç2Ç5Ç ÇwÇhÇyÇ.Ç Ç(Ç>Ç Ç7Ç Ç2Ç5Ç.Ç2Ç Ç1Ç Ç3Ç1Ç7Ç.Ç5Ç0Ç
Ç¢Ç Ç7Ç3Ç2Ç ÇoÇwÇnÇ ÇSÇaÇnÇ.Ç Ç(ÇeÇeÇ ÇiÇ.Ç Ç4Ç2Ç.Ç0Ç0Ç Ç2Ç ÇeÇaÇ.Ç Ç‘Ç
Ç7Ç Ç-Ç Ç-Ç
ÇaÇ ÇeÇaÇeÇ ÇBÇeÇgÇ.Ç ÇHÇaÇ ÇeÇwÇeÇ ÇvÇeÇrÇeÇ ÇpÇeÇcÇsÇ ÇlÇwÇ Ç7Ç5Ç.Ç@Ç Ç2Ç ÇmÇoÇsÇ
ÇtÇeÇ.Ç Ç-Ç Ç-Ç Ç‘Ç
Ç<Ç1Ç Ç=Ç ÇPÇ
Ç.Ç ÇTÇwÇiÇ ÇaÇ
ÇeÇeÇrÇ ÇoÇ Ç:Ç Ç‘Ç
ÇbÇsÇ
Ç:Ç ÇeÇeÇ
Ç.Ç ÇéÇ ÇaÇeÇ.Ç ÇaÇiÇ
 
10000»*
od
¢g =
ae CAPE ———
JOJO
corre
~ —— e ——
y rere noe
e a '
¥ " .
tel Y > eee eS
Long Island Iced Tea 120 Ice Latte 100
Ginger Ale 120 Ice Americano 100
ee ——
Merry Christmas 120 Ice Cappuchino 100
La Vie En Rose 120 Ice Caramel Macchiato 120
hn
Strawberry Margarita 120 Black Orange / Yuzu 120
LD
Ry] Hot Coffee with Milk 80
c d : , - ee
Espresso 60
r ——
4 Coldbrew Thai Specialty 190 ALL KINOS
Espresso On The Rock 400
_ _——L_ ————_—_—_—
ee .
DESSER — Honey a's
’ —_—<——— 1.200 —_——————
‘4 SE _ Aa » a ry 5
“i _— i ar Dont Wor: Be Coffee 2C ee
ij u Fone} a a —— ail
| . ah a % '
a
»Ç*Ç
ÇoÇdÇ
Ç¢ÇgÇ Ç=Ç
ÇaÇeÇ ÇCÇAÇPÇEÇ Ç—Ç—Ç—Ç
ÇJÇOÇJÇOÇ
ÇcÇoÇrÇrÇeÇ
Ç~Ç Ç—Ç—Ç ÇeÇ Ç—Ç—Ç
ÇyÇ ÇrÇeÇrÇeÇ ÇnÇoÇeÇ
ÇeÇ ÇaÇ Ç'Ç
Ç¥Ç Ç"Ç Ç.Ç
ÇtÇeÇlÇ ÇYÇ Ç>Ç ÇeÇeÇeÇ ÇeÇSÇ
ÇLÇoÇnÇgÇ ÇIÇsÇlÇaÇnÇdÇ ÇIÇcÇeÇdÇ ÇTÇeÇaÇ Ç1Ç2Ç0Ç ÇIÇcÇeÇ ÇLÇaÇtÇtÇeÇ Ç1Ç0Ç0Ç
ÇGÇiÇnÇgÇeÇrÇ ÇAÇlÇeÇ Ç1Ç2Ç0Ç ÇIÇcÇeÇ ÇAÇmÇeÇrÇiÇcÇaÇnÇoÇ Ç1Ç0Ç0Ç
ÇeÇeÇ Ç—Ç—Ç
ÇMÇeÇrÇrÇyÇ ÇCÇhÇrÇiÇsÇtÇmÇaÇsÇ Ç1Ç2Ç0Ç ÇIÇcÇeÇ ÇCÇaÇpÇpÇuÇcÇhÇiÇnÇoÇ Ç1Ç0Ç0Ç
ÇLÇaÇ ÇVÇiÇeÇ ÇEÇnÇ ÇRÇoÇsÇeÇ Ç1Ç2Ç0Ç ÇIÇcÇeÇ ÇCÇaÇrÇaÇmÇeÇlÇ ÇMÇaÇcÇcÇhÇiÇaÇtÇoÇ Ç1Ç2Ç0Ç
ÇhÇnÇ
ÇSÇtÇrÇaÇwÇbÇeÇrÇrÇyÇ ÇMÇaÇrÇgÇaÇrÇiÇtÇaÇ Ç1Ç2Ç0Ç ÇBÇlÇaÇcÇkÇ ÇOÇrÇaÇnÇgÇeÇ Ç/Ç ÇYÇuÇzÇuÇ Ç1Ç2Ç0Ç
ÇLÇDÇ
ÇRÇyÇ]Ç ÇHÇoÇtÇ ÇCÇoÇfÇfÇeÇeÇ ÇwÇiÇtÇhÇ ÇMÇiÇlÇkÇ Ç8Ç0Ç
ÇcÇ ÇdÇ Ç:Ç Ç,Ç Ç-Ç ÇeÇeÇ
ÇEÇsÇpÇrÇeÇsÇsÇoÇ Ç6Ç0Ç
ÇrÇ Ç—Ç—Ç
Ç4Ç ÇCÇoÇlÇdÇbÇrÇeÇwÇ ÇTÇhÇaÇiÇ ÇSÇpÇeÇcÇiÇaÇlÇtÇyÇ Ç1Ç9Ç0Ç ÇAÇLÇLÇ ÇKÇIÇNÇOÇSÇ
ÇEÇsÇpÇrÇeÇsÇsÇoÇ ÇOÇnÇ ÇTÇhÇeÇ ÇRÇoÇcÇkÇ Ç4Ç0Ç0Ç
Ç_Ç Ç_Ç—Ç—ÇLÇ_Ç Ç—Ç—Ç—Ç—Ç_Ç—Ç_Ç—Ç_Ç—Ç
ÇeÇeÇ Ç.Ç
ÇDÇEÇSÇSÇEÇRÇ Ç—Ç ÇHÇoÇnÇeÇyÇ ÇaÇ'ÇsÇ
Ç’Ç Ç—Ç_Ç—Ç<Ç—Ç—Ç—Ç Ç1Ç.Ç2Ç0Ç0Ç Ç—Ç_Ç—Ç—Ç—Ç—Ç—Ç—Ç
Ç‘Ç4Ç ÇSÇEÇ Ç_Ç ÇAÇaÇ Ç»Ç ÇaÇ ÇrÇyÇ Ç5Ç
Ç“ÇiÇ Ç_Ç—Ç ÇiÇ ÇaÇrÇ ÇDÇoÇnÇtÇ ÇWÇoÇrÇ:Ç ÇBÇeÇ ÇCÇoÇfÇfÇeÇeÇ Ç2ÇCÇ ÇeÇeÇ
ÇiÇjÇ ÇuÇ ÇFÇoÇnÇeÇ}Ç ÇaÇ ÇaÇ Ç—Ç—Ç ÇaÇiÇlÇ
Ç|Ç Ç.Ç ÇaÇhÇ ÇaÇ Ç%Ç Ç'Ç
ÇaÇ
2Ç
ÇiÇsÇ ÇsÇcÇeÇ ÇSÇHÇ ÇwÇaÇeÇeÇnÇtÇ)Ç ÇoÇnÇeÇ Ç"Ç
ÇvÇiÇnÇ ÇFÇHÇ ÇWÇoÇrÇ Ç7Ç7Ç7Ç)Ç ÇGÇiÇnÇaÇ ÇGÇmÇnÇwÇyÇ Ç:Ç
ÇgÇeÇiÇiÇnÇeÇwÇ ÇrÇyÇ ÇPÇhÇ ÇOÇTÇ ÇeÇeÇ ÇDÇeÇnÇeÇ,Ç ÇmÇeÇnÇeÇ Ç7Ç
Ç‘Ç Ç;Ç Ç7Ç Ç;Ç
ÇcÇuÇlÇtÇiÇeÇsÇ ÇwÇeÇ ÇHÇFÇ ÇeÇrÇiÇnÇ ÇhÇeÇtÇuÇtÇuÇmÇ ÇnÇeÇiÇiÇdÇ Ç‘Ç
ÇoÇrÇpÇ ÇeÇrÇeÇ Ç-Ç
Ç~Ç Ç©Ç ÇPÇeÇtÇ ÇhÇuÇeÇ ÇnÇaÇnÇ ÇoÇnÇeÇ Ç—Ç
ÇrÇaÇ ÇeÇaÇeÇ Ç.Ç
ÇtÇoÇnÇsÇ ÇaÇTÇ
Ç©Ç Ç«Ç ÇwÇrÇ ÇPÇaÇlÇsÇ Ç©Ç
ÇoÇnÇ Ç:Ç ÇaÇrÇtÇeÇ ÇaÇeÇfÇuÇiÇeÇ
ÇfÇrÇsÇvÇeÇuÇsÇ ÇaÇnÇtÇ
ÇsÇrÇoÇ ÇaÇ*Ç ÇaÇdÇ ÇoÇ
ÇEÇEÇ ÇiÇeÇ ÇaÇ
ÇaÇpÇnÇiÇeÇ Ç-Ç ÇSÇAÇGÇAÇSÇ ÇsÇiÇdÇlÇiÇaÇtÇaÇaÇdÇeÇsÇaÇiÇaÇeÇaÇnÇeÇnÇsÇiÇlÇiÇeÇaÇiÇaÇsÇ ÇtÇoÇnÇsÇ ÇeÇtÇ ÇrÇeÇ ÇhÇeÇ ÇaÇgÇaÇtÇeÇ
Ç©Ç Ç-Ç Ç_Ç ÇeÇ
ÇsÇuÇaÇ ÇtÇ Ç-Ç
Ç€Ç ÇaÇ Ç¥Ç ÇaÇ?Ç Ç.Ç Ç-Ç ÇwÇaÇ Ç-Ç Ç'Ç Ç°Ç
Ç5Ç.ÇeÇ@Ç Ç“ÇAÇsÇ ÇcÇ Ç.Ç Ç‘Ç?Ç@Ç ÇcÇeÇ ÇhÇtÇsÇ
ÇeÇ Ç,Ç ÇmÇaÇoÇ ÇsÇeÇeÇsÇ?Ç ÇMÇaÇrÇeÇ ÇeÇsÇtÇoÇyÇ Ç1Ç.Ç Ç;Ç Ç3Ç0Ç.Ç ÇaÇoÇ ÇnÇyÇ
Ç:Ç Ç>Ç.Ç«Ç Ç?Ç_Ç-Ç
ÇaÇ ÇbÇeÇ,Ç ÇSÇOÇ ÇaÇ”Ç ÇmÇeÇrÇ Ç'Ç ÇrÇeÇ Ç7Ç?Ç)Ç Ç’Ç Ç‘Ç Ç'Ç
Ç Ç)Ç Ç.ÇoÇ5Ç ÇsÇeÇeÇsÇoÇoÇeÇrÇtÇsÇeÇ ÇcÇoÇvÇeÇtÇ ÇmÇnÇ.Ç ÇAÇTÇWÇ Ç:Ç Ç~Ç~Ç Ç_Ç ÇiÇ)Ç
ÇLÇ2Ç1Ç9Ç Ç2ÇiÇ4ÇlÇSÇiÇeÇvÇsÇ,Ç.Ç Ç7Ç6Ç ÇGÇoÇeÇrÇ ÇeÇTÇ ÇrÇyÇoÇsÇ ÇfÇeÇ ÇAÇTÇwÇ Ç-Ç ÇwÇwÇ.Ç ÇcÇoÇ
ÇeÇ Ç2Ç@ÇeÇ)Ç Ç2Ç1Ç4Ç5Ç7Ç0Ç4Ç ÇSÇOÇPÇ.Ç Ç7Ç ÇWÇeÇ Ç4ÇmÇ ÇmÇuÇtÇeÇ Ç1Ç ÇrÇvÇ Ç4Ç.Ç ÇOÇOÇ Ç4Ç ÇeÇ
Ç.Ç-Ç Ç=Ç Ç«Ç
ÇoÇvÇrÇ Ç4Ç5Ç8Ç ÇOÇOÇRÇsÇ,Ç ÇMÇIÇUÇRÇAÇ ÇSÇyÇ)Ç.Ç ÇmÇeÇ ÇAÇrÇTÇ Ç1Ç ÇfÇyÇ Ç3Ç.ÇcÇ8Ç ÇiÇ Ç4Ç5Ç.Ç2Ç
ÇpÇdÇ ÇoÇrÇ Ç'Ç Ç—Ç
Ç°Ç ÇBÇeÇsÇtÇ Ç2ÇiÇlÇeÇsÇwÇeÇ7ÇTÇsÇeÇsÇsÇ ÇWÇrÇoÇmÇsÇ Ç1Ç Ç¥Ç Ç7Ç9Ç.Ç0Ç0Ç9Ç Ç1Ç Ç7Ç5Ç.Ç2Ç3Ç Ç¢Ç
ÇOÇ.Ç4Ç%Ç%Ç Ç2Ç ÇlÇoÇoÇsÇeÇ ÇiÇ Ç.Ç Ç.Ç Ç3Ç7Ç Ç.Ç@Ç ÇiÇ ÇiÇ8Ç.Ç2Ç3Ç
ÇrÇaÇ)Ç Ç4Ç.Ç3Ç8Ç:Ç Ç2Ç1Ç3Ç1Ç3Ç5Ç0Ç1Ç7Ç5Ç2Ç5Ç1Ç ÇsÇhÇeÇeÇtÇ ÇMÇeÇtÇ ÇiÇ)Ç Ç7Ç Ç4Ç0Ç.Ç0Ç0Ç Ç1Ç7Ç4Ç.Ç2Ç5Ç Ç¢ÇCÇ
ÇDÇLÇ Ç2ÇiÇlÇeÇ7ÇTÇeÇOÇlÇeÇcÇeÇeÇeÇ ÇWÇNÇ Ç1Ç Ç'Ç Ç9Ç.Ç0Ç0Ç Ç|Ç Ç1Ç8Ç6Ç.Ç0Ç0Ç
Ç@Ç Ç|Ç ÇtÇeÇ Ç2Ç0Ç7Ç0Ç1Ç1Ç2Ç8Ç2Ç ÇrÇaÇhÇ ÇnÇmÇ ÇiÇnÇ Ç2Ç9Ç.Ç0Ç0Ç Ç1Ç ÇMÇzÇsÇeÇ Ç8Ç Ç¢Ç
ÇhÇeÇlÇ
ÇPÇeÇ ÇLÇlÇ Ç2ÇLÇIÇ@ÇMÇOÇIÇIÇ ÇWÇaÇrÇiÇ Ç.Ç*Ç ÇtÇnÇ ÇaÇ7Ç.Ç Ç|Ç Ç1Ç2Ç Ç.Ç@ÇoÇ
ÇiÇ)Ç ÇsÇ ÇnÇeÇeÇ Ç4ÇdÇ)Ç ÇWÇEÇSÇ ÇaÇpÇcÇ)Ç ÇUÇoÇrÇuÇ ÇaÇrÇnÇ Ç”Ç ÇaÇ Ç2Ç Ç1Ç2Ç9Ç.Ç@Ç0Ç Ç4Ç
ÇDÇEÇ,Ç ÇMÇBÇBÇSÇ ÇTÇIÇOÇOÇIÇSÇEÇ?Ç ÇAÇCÇFÇEÇ!Ç ÇOÇrÇ ÇOÇEÇMÇ ÇIÇDÇ ÇoÇeÇsÇ Ç9Ç ÇvÇwÇ.Ç Ç5Ç.Ç0Ç9Ç Ç2Ç Ç1Ç2Ç.Ç2Ç0Ç ÇSÇ
Ç'Ç ÇPÇoÇ Ç.Ç Ç.Ç Ç.Ç
Ç:Ç Ç7Ç1Ç9Ç1Ç1Ç Ç7ÇSÇSÇOÇSÇ ÇTÇhÇoÇmÇeÇ.Ç Ç1Ç ÇiÇrÇ Ç1ÇsÇ ÇoÇoÇ Ç|Ç Ç1Ç7Ç5Ç.Ç%Ç
Ç¥Ç Ç-Ç Ç1Ç9Ç)Ç Ç<Ç
ÇGÇOÇ ÇAÇeÇ ÇcÇwÇaÇpÇhÇaÇwÇyÇ:Ç Ç1Ç)Ç.Ç ÇvÇeÇ Ç’Ç Ç1Ç7Ç2Ç.Ç0Ç0Ç Ç|Ç Ç1Ç2Ç6Ç.Ç0Ç
Ç*Ç ÇoÇ
ÇMÇeÇeÇeÇ ÇfÇrÇeÇ ÇeÇsÇcÇ ÇoÇnÇ Ç;Ç Ç1Ç ÇwÇuÇ Ç9Ç9Ç.Ç@Ç0Ç Ç|Ç Ç7Ç.ÇcÇeÇ Ç‘Ç
Ç>Ç
ÇsÇtÇeÇhÇtÇ ÇPÇeÇrÇnÇtÇ ÇiÇcÇ-Ç2Ç5Ç ÇwÇhÇyÇ.Ç Ç(Ç>Ç Ç7Ç Ç2Ç5Ç.Ç2Ç Ç1Ç Ç3Ç1Ç7Ç.Ç5Ç0Ç
Ç¢Ç Ç7Ç3Ç2Ç ÇoÇwÇnÇ ÇSÇaÇnÇ.Ç Ç(ÇeÇeÇ ÇiÇ.Ç Ç4Ç2Ç.Ç0Ç0Ç Ç2Ç ÇeÇaÇ.Ç Ç‘Ç
Ç7Ç Ç-Ç Ç-Ç
ÇaÇ ÇeÇaÇeÇ ÇBÇeÇgÇ.Ç ÇHÇaÇ ÇeÇwÇeÇ ÇvÇeÇrÇeÇ ÇpÇeÇcÇsÇ ÇlÇwÇ Ç7Ç5Ç.Ç@Ç Ç2Ç ÇmÇoÇsÇ
ÇtÇeÇ.Ç Ç-Ç Ç-Ç Ç‘Ç
Ç<Ç1Ç Ç=Ç ÇPÇ
Ç.Ç ÇTÇwÇiÇ ÇaÇ
ÇeÇeÇrÇ ÇoÇ Ç:Ç Ç‘Ç
ÇbÇsÇ
Ç:Ç ÇeÇeÇ
Ç.Ç ÇéÇ ÇaÇeÇ.Ç ÇaÇiÇ

 
str
 
########################################################################################
 

########################################################################################
 
########################################################################################
 

########################################################################################
 
########################################################################################
 
#ShowMustGoOn(img) # show the image

########################################################################################
 
########################################################################################
 
########################################################################################
 
Import and 
 
path = [
    '/Users/imac/Desktop/SoloOpenSourceProject/JOCR/TestImage/Menu/IMG_7571.jpeg']
 
txt = pytesseract.image_to_string(img, lang='eng', config='--psm 6')
 
print(text)
 
# https://stackoverflow.com/questions/64723694/permission-denied-when-reading-a-image-text-in-pytesseract
 
 **
 
img=get_grayscale(img)
img = Image.fromarray(img)#https://stackoverflow.com/questions/43232813/convert-opencv-image-format-to-pil-image-format

 
ShowMustGoOn(img)
 
path = '/Users/imac/Desktop/SoloOpenSourceProject/JOCR/TestImage/Menu/IMG_7571.jpeg'
img=Image.open(path)
text=ts.image_to_string(img)
ShowMustGoOn(img)
print(text)
# https://stackoverflow.com/questions/64723694/permission-denied-when-reading-a-image-text-in-pytesseract
 
cv2.imread(
 
import tesseract
 
print(tesseract)
 
.__file__
 
#open and read the file after the appending:

#df.to_csv("test1.csv")
#print(df.to_string())
#cv2.imshow("image", img)
#cv2.waitKey(0)
#cv2.destroyAllWindows()'''
 

from tesserocr import PyTessBaseAPI
from PIL import Image

with PyTessBaseAPI(lang="tha") as api:
    #ลบช่องว่างแต่ละตัวอักษร
    api.SetVariable('preserve_interword_spaces', '1')
    
    #Path ของรูปภาพ
    api.SetImageFile("Image.jpeg")
    print(api.GetUTF8Text())
 
10000#
 
Image.open(
 

#cv2.imshow("test",img)
#cv2.waitKey(0)
#cv2.destroyAllWindows()
 
#opening - erosion followed by dilation
def opening(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)
 
img = cv2.imread('/Users/imac/Desktop/SoloOpenSourceProject/JOCR/TestImage/Menu/IMG_7571.jpeg')
 
canny,get_grayscale,sharpen,erode,dilate,opening
 
opening
 
#dilation
def dilate(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.dilate(image, kernel, iterations = 1)
    # https://www.geeksforgeeks.org/erosion-dilation-images-using-opencv-python/
 
def get_grayscale(image):
    return cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

def sharpen(image):
    #kernel = np.array([[-1,-1,-1], [-1,10,-1], [-1,-1,-1]])
    #kernel = np.array([[0.25,0,-0.25], [0.5,0,-0.5], [0.25,0,-0.25]])
    kernel = (1/(10**2))*np.ones((10,10))
    # https://youtu.be/KuXjwB4LzSA?si=mt-leKGKjpMnJGfg
    # https://www.geeksforgeeks.org/python-opencv-filter2d-function/
    return cv2.filter2D(image, -1, kernel)
 
#dilation
def dilate(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.dilate(image, kernel, iterations = 1)
 


def sharpen(image):
    kernel = np.array([[-1,-1,-1], [-1,10,-1], [-1,-1,-1]])
    return cv2.filter2D(image, -1, kernel)
 
def get_grayscale(image):
    return cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
 
def canny(image):
    return cv2.Canny(image, 100, 200)

#dilation
def dilate(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.dilate(image, kernel, iterations = 1)
    
#erosion
def erode(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.erode(image, kernel, iterations = 1)

#opening - erosion followed by dilation
def opening(image):
    kernel = np.ones((5,5),np.uint8)
    return cv2.morphologyEx(image, cv2.MORPH_OPEN, kernel)

def get_grayscale(image):
    return cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

def sharpen(image):
    kernel = np.array([[-1,-1,-1], [-1,10,-1], [-1,-1,-1]])
    return cv2.filter2D(image, -1, kernel)
 
#img = get_grayscale(img)
 

print(pytesseract.pytesseract.tesseract_cmd)
print(type(pytesseract.pytesseract.tesseract_cmd))
 
'''
 
'''
 
'''
 
    
 

#img = get_grayscale(img)
for i in [-1,0,1,2]:
 
np.array([[1/9,1/9,1/9], [1/9,1/9,1/9], [1/9,1/9,1/9]])
 
    n=100
 
25
 
print('hello')
 
import argparse
 
from PIL import Image, ImageGrab
 

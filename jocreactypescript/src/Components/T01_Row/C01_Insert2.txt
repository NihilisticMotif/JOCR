import TS_Row from "./An_Index";

export function C01_Insert(THISROW: TS_Row, ROWS: TS_Row[]): TS_Row[] {
    let let_NewKey: number;
    let let_NextKey: number;
    
    do {
        let_NewKey = Math.random();
    } while (ROWS.map(ROW => ROW.Key).includes(let_NewKey));

    do {
        let_NextKey = Math.random();
    } while (ROWS.map(ROW => ROW.Key).includes(let_NextKey));

    let let_Array: string[] = Array.from({ length: THISROW.Array.length }, () => '-');

    let let_NewRow: TS_Row = {
        Key: let_NewKey,
        Next: let_NextKey,
        Array: let_Array,
        Display: 0
    };

    // Find the index where the new row should be inserted
    const insertIndex = ROWS.findIndex(row => row.Key === THISROW.Key);

    if (insertIndex !== -1) {
        ROWS.splice(insertIndex, 0, let_NewRow);
    }

    alert(JSON.stringify([let_NewRow, ...ROWS]));

    if (let_NewRow.Display === 0) {
        return [let_NewRow, ...ROWS];
    } else {
        return ROWS;
    }
}